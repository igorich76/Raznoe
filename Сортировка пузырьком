========= объяснение теории (для Питона) ===========
a = [1, 7, -3, 9, 0, -67, 34, 12, 45, 1000, 6, 8, -2, 99]
длина_списка = len(a)

# внешний цикл мы делаем длиной длина_списка - 1 для того, чтобы алгоритм, оказавшись
# на последнем индексе списка не столкнулся с тем, что текущий элемент списка ему
# не с чем сравнивать, т.к. справа больше ничего нет

диапазон_внешнего_цикла = длина_списка - 1

for i in range(диапазон_внешнего_цикла):

# диапазон внутреннего списка мы уменьшаем на величину индекса текущего внешнего
# цикла потому, что в предыдущем цикле (если это не первый), мы уже поставили в
# конец списка самый большой элемент, а следовательно, сравнивать элементы списка,
# которые уже были отсортированы и стоят на своих местах, смысла нет.
# с каждым следующим внешним циклом, количество отсортированных и поставленных в
# конец списка элементов увеличивается на 1, как и увеличивается i. Следовательно,
# отнимая i от длины списка, мы выводим за границу обработки алгоритмом уже
# отсортированные элементы.

    диапазон_внутреннего_цикла = диапазон_внешнего_цикла - i
    
    for j in range(диапазон_внутреннего_цикла):
        
        if a[j] > a[j + 1]:                  # если порядок элементов пары неправильный
            a[j], a[j + 1] = a[j + 1], a[j]  # меняем элементы пары местами 

print('Отсортированный список:', a)
============== решение на Питоне (моё) ====================
a = [17, 24, 91, 96, 67, -27, 79, -71, -71, 58, 48, 88, 88, -16, -78, 96, -76, 56, 92, 1, 32, -17, 36, 88, -61, -97, -37, -84, 50, 47, 94, -6, 52, -76, 93, 14, -32, 98, -65, -16, -9, -68, -20, -40, -71, 93, -91, 44, 25, 79, 97, 0, -94, 7, -47, -96, -55, -58, -78, -78, -79, 75, 44, -56, -41, 38, 16, 70, 17, -17, -24, -83, -74, -73, 11, -26, 63, -75, -19, -13, -51, -74, 21, -8, 21, -68, -66, -84, -95, 78, 69, -29, 39, 38, -55, 7, -11, -26, -62, -84]

n = len(a)

for i in range(n - 1):
    for j in range(n - i - 1):
        if a[j] > a[j + 1]:
            a[j], a[j + 1] = a[j + 1], a[j]

print(a)
============= решение на PascalABC.Net (моё) ===============
## // сортировка "пузырьком"
var a := |17, 24, 91, 96, 67, -27, 79, -71, -71, 58, 48, 88, 88, -16, 
-78, 96, -76, 56, 92, 1, 32, -17, 36, 88, -61, -97, -37, -84, 50, 47, 
94, -6, 52, -76, 93, 14, -32, 98, -65, -16, -9, -68, -20, -40, -71, 
93, -91, 44, 25, 79, 97, 0, -94, 7, -47, -96, -55, -58, -78, -78, -79, 
75, 44, -56, -41, 38, 16, 70, 17, -17, -24, -83, -74, -73, 11, -26, 63, 
-75, -19, -13, -51, -74, 21, -8, 21, -68, -66, -84, -95, 78, 69, -29, 
39, 38, -55, 7, -11, -26, -62, -84|;

for var i := 0 to a.Length-2 do
  for var j := i+1 to a.Length-1 do
     if a[i] > a[j] then Swap(a[i], a[j]);
Print(a); 
